{
  "version": 3,
  "sources": [
    "/Users/rehankhan/Desktop/algorand_hackathon/lending-platform/projects/lending-platform-contracts/smart_contracts/lending_contract/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;AAEA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAyBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAjBF;;;AAAA;AAiBE;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAZF;;;AAAA;AAAA;;;AAAA;;;AAYE;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAFF;;;AAAA;;;AAEE;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAFF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAEE;;;AACS;;;;;;;;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAP;AASF;;;AACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAP;AAIF;;;AACM;;AAAc;;;AAAd;AAAJ;;;AACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAEK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1"
    },
    "4": {
      "op": "bytecblock 0x151f7c75"
    },
    "11": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "16": {
      "op": "pushbytess 0x02bece11 0xbeebeba1 0x8a2153e0 0x1e92c939 0xbcaf72ec // method \"hello(string)string\", method \"getPoolStats()string\", method \"requestLoan(uint64,string)string\", method \"assessLoan(uint64)string\", method \"getLendingInfo()string\"",
      "defined_out": [
        "Method(assessLoan(uint64)string)",
        "Method(getLendingInfo()string)",
        "Method(getPoolStats()string)",
        "Method(hello(string)string)",
        "Method(requestLoan(uint64,string)string)"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(getPoolStats()string)",
        "Method(requestLoan(uint64,string)string)",
        "Method(assessLoan(uint64)string)",
        "Method(getLendingInfo()string)"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(assessLoan(uint64)string)",
        "Method(getLendingInfo()string)",
        "Method(getPoolStats()string)",
        "Method(hello(string)string)",
        "Method(requestLoan(uint64,string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(getPoolStats()string)",
        "Method(requestLoan(uint64,string)string)",
        "Method(assessLoan(uint64)string)",
        "Method(getLendingInfo()string)",
        "tmp%2#0"
      ]
    },
    "46": {
      "op": "match main_hello_route@3 main_getPoolStats_route@4 main_requestLoan_route@5 main_assessLoan_route@6 main_getLendingInfo_route@7",
      "stack_out": []
    },
    "58": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "60": {
      "op": "return",
      "stack_out": []
    },
    "61": {
      "block": "main_getLendingInfo_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "63": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "64": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "65": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "67": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "68": {
      "op": "pushbytes 0x151f7c75005441666768616e20436f6d6d756e697479204c656e64696e673a2053657276696e672039342520756e62616e6b656420706f70756c6174696f6e207769746820626c6f636b636861696e20746563686e6f6c6f6779",
      "defined_out": [
        "0x151f7c75005441666768616e20436f6d6d756e697479204c656e64696e673a2053657276696e672039342520756e62616e6b656420706f70756c6174696f6e207769746820626c6f636b636861696e20746563686e6f6c6f6779"
      ],
      "stack_out": [
        "0x151f7c75005441666768616e20436f6d6d756e697479204c656e64696e673a2053657276696e672039342520756e62616e6b656420706f70756c6174696f6e207769746820626c6f636b636861696e20746563686e6f6c6f6779"
      ]
    },
    "160": {
      "op": "log",
      "stack_out": []
    },
    "161": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "162": {
      "op": "return",
      "stack_out": []
    },
    "163": {
      "block": "main_assessLoan_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "165": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "166": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "167": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "169": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "170": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "173": {
      "op": "btoi",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "174": {
      "callsub": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.assessLoan",
      "op": "callsub assessLoan",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "177": {
      "op": "dup",
      "defined_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ],
      "stack_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ]
    },
    "178": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length%3#0"
      ]
    },
    "179": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "as_bytes%3#0"
      ]
    },
    "180": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length_uint16%3#0"
      ]
    },
    "183": {
      "op": "swap",
      "stack_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ]
    },
    "184": {
      "op": "concat",
      "defined_out": [
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0"
      ]
    },
    "185": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "0x151f7c75"
      ]
    },
    "186": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ]
    },
    "187": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "188": {
      "op": "log",
      "stack_out": []
    },
    "189": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "190": {
      "op": "return",
      "stack_out": []
    },
    "191": {
      "block": "main_requestLoan_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "193": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "194": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "195": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "197": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "198": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "201": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "202": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "205": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "208": {
      "callsub": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.requestLoan",
      "op": "callsub requestLoan",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "211": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "212": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length%2#0"
      ]
    },
    "213": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "as_bytes%2#0"
      ]
    },
    "214": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length_uint16%2#0"
      ]
    },
    "217": {
      "op": "swap",
      "stack_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ]
    },
    "218": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "219": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "0x151f7c75"
      ]
    },
    "220": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ]
    },
    "221": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "222": {
      "op": "log",
      "stack_out": []
    },
    "223": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "224": {
      "op": "return",
      "stack_out": []
    },
    "225": {
      "block": "main_getPoolStats_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "227": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "228": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "229": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "231": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "232": {
      "op": "pushbytes 0x151f7c75005141666768616e204c656e64696e6720506f6f6c3a203132352c3030302041464e20617661696c61626c65207c20323320616374697665206c6f616e73207c2039342e322520737563636573732072617465",
      "defined_out": [
        "0x151f7c75005141666768616e204c656e64696e6720506f6f6c3a203132352c3030302041464e20617661696c61626c65207c20323320616374697665206c6f616e73207c2039342e322520737563636573732072617465"
      ],
      "stack_out": [
        "0x151f7c75005141666768616e204c656e64696e6720506f6f6c3a203132352c3030302041464e20617661696c61626c65207c20323320616374697665206c6f616e73207c2039342e322520737563636573732072617465"
      ]
    },
    "321": {
      "op": "log",
      "stack_out": []
    },
    "322": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "323": {
      "op": "return",
      "stack_out": []
    },
    "324": {
      "block": "main_hello_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "326": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "327": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "328": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "330": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "331": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "334": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "337": {
      "callsub": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "341": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "342": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "343": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "346": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "347": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "348": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "349": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "351": {
      "op": "log",
      "stack_out": []
    },
    "352": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "353": {
      "op": "return",
      "stack_out": []
    },
    "354": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "356": {
      "op": "bnz main_after_if_else@14",
      "stack_out": []
    },
    "359": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "361": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "362": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "363": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "364": {
      "op": "return",
      "stack_out": []
    },
    "365": {
      "subroutine": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "368": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "377": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "379": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "380": {
      "op": "pushbytes \"! Welcome to Afghan Community Lending Platform\"",
      "defined_out": [
        "\"! Welcome to Afghan Community Lending Platform\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"! Welcome to Afghan Community Lending Platform\""
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "429": {
      "retsub": true,
      "op": "retsub"
    },
    "430": {
      "subroutine": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.requestLoan",
      "params": {
        "amount#0": "uint64",
        "purpose#0": "bytes"
      },
      "block": "requestLoan",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "433": {
      "op": "pushbytes \"Loan request submitted for \"",
      "defined_out": [
        "\"Loan request submitted for \""
      ],
      "stack_out": [
        "\"Loan request submitted for \""
      ]
    },
    "462": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Loan request submitted for \"",
        "purpose#0 (copy)"
      ],
      "stack_out": [
        "\"Loan request submitted for \"",
        "purpose#0 (copy)"
      ]
    },
    "464": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "465": {
      "op": "pushbytes \" in Afghanistan. Awaiting AI assessment...\"",
      "defined_out": [
        "\" in Afghanistan. Awaiting AI assessment...\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\" in Afghanistan. Awaiting AI assessment...\""
      ]
    },
    "509": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "510": {
      "retsub": true,
      "op": "retsub"
    },
    "511": {
      "subroutine": "smart_contracts/lending_contract/contract.algo.ts::LendingContract.assessLoan",
      "params": {
        "creditScore#0": "uint64"
      },
      "block": "assessLoan",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "514": {
      "op": "frame_dig -1",
      "defined_out": [
        "creditScore#0 (copy)"
      ],
      "stack_out": [
        "creditScore#0 (copy)"
      ]
    },
    "516": {
      "op": "pushint 650 // 650",
      "defined_out": [
        "650",
        "creditScore#0 (copy)"
      ],
      "stack_out": [
        "creditScore#0 (copy)",
        "650"
      ]
    },
    "519": {
      "op": ">",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "520": {
      "op": "bz assessLoan_after_if_else@2",
      "stack_out": []
    },
    "523": {
      "op": "pushbytes \"Congratulations! Loan approved. Supporting Afghan entrepreneurs!\"",
      "defined_out": [
        "\"Congratulations! Loan approved. Supporting Afghan entrepreneurs!\""
      ],
      "stack_out": [
        "\"Congratulations! Loan approved. Supporting Afghan entrepreneurs!\""
      ]
    },
    "589": {
      "retsub": true,
      "op": "retsub"
    },
    "590": {
      "block": "assessLoan_after_if_else@2",
      "stack_in": [],
      "op": "pushbytes \"Assessment complete. Building financial inclusion in Afghanistan.\"",
      "defined_out": [
        "\"Assessment complete. Building financial inclusion in Afghanistan.\""
      ],
      "stack_out": [
        "\"Assessment complete. Building financial inclusion in Afghanistan.\""
      ]
    },
    "657": {
      "retsub": true,
      "op": "retsub"
    }
  }
}