{
    "name": "LendingContract",
    "structs": {},
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getPoolStats",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "requestLoan",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                },
                {
                    "type": "string",
                    "name": "purpose"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "assessLoan",
            "args": [
                {
                    "type": "uint64",
                    "name": "creditScore"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getLendingInfo",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        64,
                        166,
                        194,
                        228,
                        327
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        362
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        67,
                        169,
                        197,
                        231,
                        330
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiABASYBBBUffHUxG0EBUoIFBAK+zhEEvuvroQSKIVPgBB6SyTkEvK9y7DYaAI4FAQoApwCFAGkAA4EAQzEZFEQxGESAWhUffHUAVEFmZ2hhbiBDb21tdW5pdHkgTGVuZGluZzogU2VydmluZyA5NCUgdW5iYW5rZWQgcG9wdWxhdGlvbiB3aXRoIGJsb2NrY2hhaW4gdGVjaG5vbG9nebAiQzEZFEQxGEQ2GgEXiAFOSRUWVwYCTFAoTFCwIkMxGRREMRhENhoBFzYaAlcCAIgA20kVFlcGAkxQKExQsCJDMRkURDEYRIBXFR98dQBRQWZnaGFuIExlbmRpbmcgUG9vbDogMTI1LDAwMCBBRk4gYXZhaWxhYmxlIHwgMjMgYWN0aXZlIGxvYW5zIHwgOTQuMiUgc3VjY2VzcyByYXRlsCJDMRkURDEYRDYaAVcCAIgAGUkVFlcGAkxQKExQsCJDMRlA/tMxGBREIkOKAQGAB0hlbGxvLCCL/1CALiEgV2VsY29tZSB0byBBZmdoYW4gQ29tbXVuaXR5IExlbmRpbmcgUGxhdGZvcm1QiYoCAYAbTG9hbiByZXF1ZXN0IHN1Ym1pdHRlZCBmb3Igi/9QgCogaW4gQWZnaGFuaXN0YW4uIEF3YWl0aW5nIEFJIGFzc2Vzc21lbnQuLi5QiYoBAYv/gYoFDUEAQ4BAQ29uZ3JhdHVsYXRpb25zISBMb2FuIGFwcHJvdmVkLiBTdXBwb3J0aW5nIEFmZ2hhbiBlbnRyZXByZW5ldXJzIYmAQUFzc2Vzc21lbnQgY29tcGxldGUuIEJ1aWxkaW5nIGZpbmFuY2lhbCBpbmNsdXNpb24gaW4gQWZnaGFuaXN0YW4uiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}